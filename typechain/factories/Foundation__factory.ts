/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Foundation, FoundationInterface } from "../Foundation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "DonationMustntBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedToSentEther",
    type: "error",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "donators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSumOfDonations",
    outputs: [
      {
        internalType: "uint256",
        name: "sum",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendHelp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610a41380380610a41833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b60805161092a6101176000396000610273015261092a6000f3fe6080604052600436106100595760003560e01c80636f965a631461006d578063ac62f56614610096578063bf1482fa146100d3578063cc6cb19a146100fe578063ed88c68e1461013b578063f3a014891461014557610068565b3661006857610066610170565b005b600080fd5b34801561007957600080fd5b50610094600480360381019061008f919061064e565b610271565b005b3480156100a257600080fd5b506100bd60048036038101906100b8919061068e565b6103d8565b6040516100ca91906106ca565b60405180910390f35b3480156100df57600080fd5b506100e8610417565b6040516100f591906107a3565b60405180910390f35b34801561010a57600080fd5b50610125600480360381019061012091906107c5565b6104a5565b6040516101329190610801565b60405180910390f35b6101436104bd565b005b34801561015157600080fd5b5061015a610501565b6040516101679190610801565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361021a576001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610268919061084b565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f6576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610330576040517f96ab19c800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610356906108b0565b60006040518083038185875af1925050503d8060008114610393576040519150601f19603f3d011682016040523d82523d6000602084013e610398565b606091505b50509050806103d3576040517febab62fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600181815481106103e857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600180548060200260200160405190810160405280929190818152602001828054801561049b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610451575b5050505050905090565b60006020528060005260406000206000915090505481565b600034036104f7576040517f99b557c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104ff610170565b565b600080600090505b6001805490508110156105b15760006001828154811061052c5761052b6108c5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836105a3919061084b565b925081600101915050610509565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105e5826105ba565b9050919050565b6105f5816105da565b811461060057600080fd5b50565b600081359050610612816105ec565b92915050565b6000819050919050565b61062b81610618565b811461063657600080fd5b50565b60008135905061064881610622565b92915050565b60008060408385031215610665576106646105b5565b5b600061067385828601610603565b925050602061068485828601610639565b9150509250929050565b6000602082840312156106a4576106a36105b5565b5b60006106b284828501610639565b91505092915050565b6106c4816105da565b82525050565b60006020820190506106df60008301846106bb565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61071a816105da565b82525050565b600061072c8383610711565b60208301905092915050565b6000602082019050919050565b6000610750826106e5565b61075a81856106f0565b935061076583610701565b8060005b8381101561079657815161077d8882610720565b975061078883610738565b925050600181019050610769565b5085935050505092915050565b600060208201905081810360008301526107bd8184610745565b905092915050565b6000602082840312156107db576107da6105b5565b5b60006107e984828501610603565b91505092915050565b6107fb81610618565b82525050565b600060208201905061081660008301846107f2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061085682610618565b915061086183610618565b92508282019050808211156108795761087861081c565b5b92915050565b600081905092915050565b50565b600061089a60008361087f565b91506108a58261088a565b600082019050919050565b60006108bb8261088d565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220bb0e5514c6ca22fe6c885bd7105a71abe541a7020bdd58ce18ea65f3a95cd83d64736f6c63430008120033";

type FoundationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FoundationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Foundation__factory extends ContractFactory {
  constructor(...args: FoundationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Foundation> {
    return super.deploy(_owner, overrides || {}) as Promise<Foundation>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): Foundation {
    return super.attach(address) as Foundation;
  }
  override connect(signer: Signer): Foundation__factory {
    return super.connect(signer) as Foundation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FoundationInterface {
    return new utils.Interface(_abi) as FoundationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Foundation {
    return new Contract(address, _abi, signerOrProvider) as Foundation;
  }
}
